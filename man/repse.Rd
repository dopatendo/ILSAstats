% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/repse.R
\name{repse}
\alias{repse}
\alias{repsecomp}
\title{Standard Error for Estimates with Replicate Weights}
\usage{
repse(
  er,
  e0,
  setup = NULL,
  method = c("TIMSS", "PIRLS", "ICILS", "ICCS", "PISA", "TALIS")
)

repsecomp(se)
}
\arguments{
\item{er}{a vector or a list containing any statistic of interest
(e.g., percent, mean, variance, regression coefficient).
If it is a vector or list of \code{length==1}, the function estimates
standard errors without plausible values. If it is a list with
\code{length>1}, it estimates standard errors with plausible values.}

\item{e0}{a numeric vector or a vector containing any statistic of interest
(e.g., percent, mean, variance, regression coefficient), computed using
total weights. For scenarios without plausible values,
\code{e0} should be a single value. For scenarios with plausible values,
\code{e0} should be a vector of the same length as \code{er}.}

\item{setup}{an optional list produced by \code{\link{repsetup}}.}

\item{method}{a string indicating the name of the large-scale assessment
to determine the replication method to use. Available options are:
\code{"TIMSS"}, \code{"PIRLS"}, \code{"ICILS"}, \code{"ICCS"},
\code{"PISA"}, and \code{"TALIS"}.}

\item{se}{a numeric vector with standard errors,
used by \code{repsecomp()} to estimate a composite standard error.}
}
\value{
the standard error.
}
\description{
Standard Error for Estimates with Replicate Weights
}
\examples{
rm(list = ls())

# Creation of replicate weights
RW <- repcreate(df = repdata, # the data frame with all the information
                wt = "wt", # the total weights column name
                jkzone = "jkzones", # the jkzones column name
                jkrep = "jkrep", # the jkreps column name
                repwtname = "REPWT", # the desired name for the rep weights
                reps = 50, # the number of replications
                method = "ICILS") # the name of the method aka the study name

# Non-PVs ----

## Mean with total weights
E0 <- stats::weighted.mean(x = repdata$item01, w = repdata$wt, na.rm = TRUE)
E0

## Means by replication
ER <- as.vector(apply(RW,2,function(i){
  stats::weighted.mean(x = repdata$item01, w = i, na.rm = TRUE)
}))
ER

## Standard error by hand
repse(er = ER, e0 = E0, method = "ICILS")

## Standard error with repmean()
repmean(x = "item01",wt = "wt",repwt = RW,df = repdata, method = "ICILS")


# PVs ----

## Mean with total weights
E0 <- sapply(1:5,function(i){
  stats::weighted.mean(x = repdata[,paste0("Math",i)], w = repdata$wt, 
                       na.rm = TRUE)
})
E0

## Means by replication
ER <- lapply(1:5, function(j){
  as.vector(apply(RW,2,function(i){
    stats::weighted.mean(x = repdata[,paste0("Math",j)], w = i, na.rm = TRUE)
  }))
})
ER

## Standard error by hand
repse(er = ER, e0 = E0, method = "ICILS")

## Standard error with repmean()
repmean(x = paste0("Math",1:5),wt = "wt",repwt = RW,df = repdata, method = "ICILS",PV = TRUE)


}
